import argparse

def parameter_parser():
    parser = argparse.ArgumentParser(description="Node classification model training script")
    parser.add_argument("--dataset", type=str, default='Cora', help="Dataset: Cora, Citeseer, Pubmed, CS, Physics")
    parser.add_argument("--split", type=str, default='random', help="Splitting method")
    parser.add_argument("--device", type=str, default="cuda", help="Device")
    parser.add_argument("--hidden_size", type=int, default=256, help="Hidden unit size")
    parser.add_argument("--lr", type=float, default=0.01, help="Learning rate")
    parser.add_argument("--weight_decay", type=float, default=0.01, help="Weight decay")
    parser.add_argument("--dropout", type=float, default=0.8, help="Dropout rate")
    parser.add_argument("--coarse_layers", type=int, default=1, help="Coarsening layers")
    parser.add_argument("--num_layers", type=int, default=1, help="GNN layers")
    parser.add_argument("--GNN", type=str, default="GCN", help="GNN type")
    parser.add_argument("--head", type=int, default=4, help="Number of heads in GAT")
    parser.add_argument("--ego_range", type=int, default=1, help="Ego network range")
    parser.add_argument("--epochs", type=int, default=50, help="Number of training epochs")
    parser.add_argument("--activate", type=str, default="leaky_relu", help="Activation function")
    parser.add_argument("--negative_slope", type=float, default=0.2, help="Negative slope in relu")
    return parser.parse_args()
